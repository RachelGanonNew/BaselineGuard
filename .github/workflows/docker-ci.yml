name: Docker CI - Build Circom & Run Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up system dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y git make build-essential python3 curl

      - name: Install Node.js dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install npm packages and snarkjs
        run: |
          npm ci
          npm i -g snarkjs@0.7.5

      - name: Build circuit with npx circom
        run: |
          set -e
          chmod +x ci/run_e2e.sh
          # prefer npx circom on runner (install circom via npm if not present)
          if ! command -v npx >/dev/null 2>&1; then
            echo "npx not found"
            exit 1
          fi
          npx circom circuits/square.circom --r1cs --wasm --sym -o circuits/build
          pushd circuits/build
          if [ ! -f powersOfTau28_hez_final_10.ptau ]; then
            curl -sSLo powersOfTau28_hez_final_10.ptau https://hermez.s3-eu-west-1.amazonaws.com/powersOfTau28_hez_final_10.ptau
          fi
          snarkjs groth16 setup square.r1cs powersOfTau28_hez_final_10.ptau square_0000.zkey
          snarkjs zkey contribute square_0000.zkey square_final.zkey --name="build-and-contribute" -v
          snarkjs zkey export verificationkey square_final.zkey verification_key.json
          snarkjs zkey export solidityverifier square_final.zkey ../../contracts/Verifier.sol
          popd

      - name: Run unit tests (node)
        run: |
          set -e
          npm ci
          npm test --silent

      - name: Upload artifacts (circuits build)
        uses: actions/upload-artifact@v4
        with:
          name: circuits-build
          path: circuits/build
